:root {
  --portrait-size: min(300px, calc(100% - 60px));
  --halo-color: #00F5D4; 
  --max-shadow-size: 40px;
}

.App {
  text-align: center;
  width: 100%;
  max-width: 100vw;
  overflow: hidden;
}

.App-header {
  background-color: #FFFFFF; /* White background */
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: #000000; /* Black text for contrast */
  width: 100%;
  padding: var(--max-shadow-size);
  box-sizing: border-box;
}

.portrait-container {
  position: relative;
  width: var(--portrait-size);
  height: var(--portrait-size);
  border-radius: 50%; /* Ensures the container is a perfect circle */
  cursor: pointer;
  transition: all 0.3s ease, transform 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.agent-portrait {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%; /* Ensures the image is a perfect circle */
  transition: all 0.3s ease;
}

.portrait-container:hover {
  transform: scale(1.05);
}

.portrait-container:hover .agent-portrait {
  filter: saturate(110%);
}

/* This pseudo-element creates the halo effect */
.portrait-container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  pointer-events: none;
  transition: box-shadow 0.5s ease-in-out;
  box-shadow: 0 0 0 0 rgba(0, 245, 212, 0); /* Initially transparent */
}

/* When the call is active, show a static halo */
.portrait-container.active::after {
    box-shadow: 0 0 20px 5px rgba(0, 245, 212, 0.4);
}

/* When the agent is speaking, apply the breathing animation */
.portrait-container.active.agent-speaking::after {
  animation: breathe 2.5s infinite ease-in-out;
}

.portrait-container.inactive .agent-portrait {
  filter: saturate(50%) grayscale(50%);
}

/* Keyframes for the new 'breathing' animation */
@keyframes breathe {
  0% {
    box-shadow: 0 0 20px 5px rgba(0, 245, 212, 0.4);
  }
  50% {
    box-shadow: 0 0 40px 20px rgba(0, 245, 212, 0.7);
  }
  100% {
    box-shadow: 0 0 20px 5px rgba(0, 245, 212, 0.4);
  }
}

/* Smooth transitions for all states */
.portrait-container,
.portrait-container.active,
.portrait-container.active.agent-speaking,
.portrait-container.active:not(.agent-speaking),
.portrait-container.inactive {
  transition: all 0.5s ease, transform 0.3s ease;
}
